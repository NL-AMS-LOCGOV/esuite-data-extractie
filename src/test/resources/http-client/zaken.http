###
GET {{base-url}}/zaken?zaaktype=MigratieTest1
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.results.length === 83, "Response body results size is not 83")
        client.assert(response.body.count === 83, "Response body count is not 83")
        client.assert(!response.body.previousPage, "Response body previousPage is not false")
        client.assert(!response.body.nextPage, "Response body nextPage is not false")
    });
%}

###
GET {{base-url}}/zaken?zaaktype=MigratieTest1&inclusiefOpen=true
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.results.length === 100, "Response body results size is not 100")
        client.assert(response.body.count === 9335, "Response body count is not 9335")
        client.assert(!response.body.previousPage, "Response body previousPage is not false")
        client.assert(response.body.nextPage, "Response body nextPage is not true")
    });
%}

###
GET {{base-url}}/zaken?zaaktype=MigratieTest1&inclusiefOpen=false
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.results.length === 83, "Response body results size is not 83")
        client.assert(response.body.count === 83, "Response body count is not 83")
        client.assert(!response.body.previousPage, "Response body previousPage is not false")
        client.assert(!response.body.nextPage, "Response body nextPage is not false")
    });
%}

###
GET {{base-url}}/zaken?zaaktype=MigratieTest1&inclusiefOpen=xxx
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(response.body.melding === "Validatie fout(en)", "Response body melding is not \"Validatie fout(en)\"")
        client.assert(response.body.fouten.length === 1, "Response body fouten size is not 1")
    });
%}

###
GET {{base-url}}/zaken?zaaktype=MigratieTest1&page=1&inclusiefOpen=true
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.results.length === 100, "Response body results size is not 100")
        client.assert(response.body.count === 9335, "Response body count is not 9335")
        client.assert(response.body.previousPage, "Response body previousPage is not true")
        client.assert(response.body.nextPage, "Response body nextPage is not true")
    });
%}

###
GET {{base-url}}/zaken?zaaktype=MigratieTest1&page=2&inclusiefOpen=true
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.results.length === 100, "Response body results size is not 100")
        client.assert(response.body.count === 9335, "Response body count is not 9335")
        client.assert(response.body.previousPage, "Response body previousPage is not true")
        client.assert(response.body.nextPage, "Response body nextPage is not true")
    });
%}

###
GET {{base-url}}/zaken?zaaktype=MigratieTest1&page=99&inclusiefOpen=true
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.results.length === 0, "Response body results size is not 0")
        client.assert(response.body.count === 9335, "Response body count is not 9335")
        client.assert(response.body.previousPage, "Response body previousPage is not true")
        client.assert(!response.body.nextPage, "Response body nextPage is not false")
    });
%}

###
GET {{base-url}}/zaken?zaaktype=MigratieTest1&page=x&page_size=y
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(response.body.melding === "Validatie fout(en)", "Response body melding is not \"Validatie fout(en)\"")
        client.assert(response.body.fouten.length === 2, "Response body fouten size is not 2")
    });
%}

###
GET {{base-url}}/zaken?zaaktype=MigratieTest1&page=-1&page_size=-1
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(response.body.melding === "Validatie fout(en)", "Response body melding is not \"Validatie fout(en)\"")
        client.assert(response.body.fouten.length === 2, "Response body fouten size is not 2")
    });
%}

### Zaak met besluit.
GET {{base-url}}/zaken/12-2023
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Zaak met documenten
GET {{base-url}}/zaken/182-2025
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Zaak met documenten, contacten, bagobjecten en gerelateerde zaken.
GET {{base-url}}/zaken/2011-2019
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Zaak met archiveerGegevens.overgebrachteGegevens
GET {{base-url}}/zaken/3783-2016
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Zaak met archiveerGegevens
GET {{base-url}}/zaken/116-2025
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Zaak met persoon met bsn als initiator en 2 personen en bedrijf als betrokkenen waarvan persoon notitie heeft
GET {{base-url}}/zaken/337-2023
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Zaak met bedrijf als initiator
GET {{base-url}}/zaken/1718-2020
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Zaak die niet bestaat
GET {{base-url}}/zaken/1718-2030
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 404, "Response status is not 404");
        client.assert(response.body.melding === "Zaak with functionele identificatie '1718-2030' not found", "Response body melding is not \"Zaak with functionele identificatie '1718-2030' not found\"")
    });
%}

### Zaak is gemigreerd
POST {{base-url}}/zaken/1718-2030/migrated
X-API-KEY: {{api-key}}

> {%
    client.test("Request executed successfully", function () {
        client.assert(response.status === 204, "Response status is not 204");
    });
%}

### GCP2
GET {{base-url}}/zaken/180-2025
X-API-KEY: {{api-key}}

